/+  TEST-RUNNER
/=  ALL-TESTS
  /^  (MAP PATH (LIST TEST-ARM:TEST-RUNNER))
  /:  /===/TESTS
  /*  /TEST-GEN/
::
|%
++  MAIN
  |=  [DEFER=? TESTS=(LIST TEST:TEST-RUNNER)]
  ^-  TANG
  ::
  %-  ZING
  %+  TURN  TESTS
  |=  [=PATH TEST-FUNC=TEST-FUNC:TEST-RUNNER]
  ^-  TANG
  ::
  =/  TEST-RESULTS=TANG  (RUN-TEST PATH TEST-FUNC)
  ::  IF :DEFER IS SET, PRODUCE ERRORS; OTHERWISE PRINT THEM AND PRODUCE ~
  ::
  ?:  DEFER
    TEST-RESULTS
  ((SLOG (FLOP TEST-RESULTS)) ~)
::
++  RUN-TEST
  ::  EXECUTES AN INDIVIDUAL TEST.
  |=  [PAX=PATH TEST=TEST-FUNC:TEST-RUNNER]
  ^-  TANG
  =+  NAME=(SPUD PAX)
  =+  RUN=(MULE TEST)
  ?-  -.RUN
    %|  ::  THE STACK IS ALREADY FLOPPED FOR OUTPUT?
        ;:  WELD
          P.RUN
          `TANG`[[%LEAF (WELD "CRASHED " NAME)] ~]
        ==
    %&  ?:  =(~ P.RUN)
          [[%LEAF (WELD "OK      " NAME)] ~]
        ::  CREATE A WELDED LIST OF ALL FAILURES INDENTED.
        %-  FLOP
        ;:  WELD
          `TANG`[[%LEAF (WELD "FAILED  " NAME)] ~]
          ::TODO INDENT
          :: %+  TURN  P:RUN
          ::   |=  {I/TAPE}
          ::   ^-  TANK
          ::   [%LEAF (WELD "  " I)]
          P.RUN
        ==
  ==
::  +FILTER-TESTS-BY-PREFIX
::
++  FILTER-TESTS-BY-PREFIX
  |=  [PREFIX=PATH TESTS=(LIST TEST:TEST-RUNNER)]
  ^+  TESTS
  ::
  =/  PREFIX-LENGTH=@UD  (LENT PREFIX)
  ::
  %+  SKIM  TESTS
  ::
  |=  [=PATH *]
  =(PREFIX (SCAG PREFIX-LENGTH PATH))
--
::
:-  %SAY
|=  $:  [NOW=@DA ENY=@UVJ BEC=BEAK]
        [FILTER=$?(~ [PAX=PATH ~])]
        [DEFER=_& SEED=?(~ @UVJ)]
    ==
::  START PRINTING EARLY IF WE'RE NOT DEFERRING OUTPUT
::
~?  !DEFER  %TESTS-COMPILED
:-  %TANG
::  USE EMPTY PATH PREFIX IF UNSPECIFIED
::
=/  PREFIX=PATH  ?~(FILTER ~ PAX.FILTER)
::
=/  FILTERED-TESTS=(LIST TEST:TEST-RUNNER)
  %+  FILTER-TESTS-BY-PREFIX
    PREFIX
  (RESOLVE-TEST-PATHS:TEST-RUNNER ALL-TESTS)
::
(MAIN DEFER FILTERED-TESTS)
