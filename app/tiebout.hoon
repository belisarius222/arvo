/-  HALL, TIEBOUT
=,  TIEBOUT
=,  EYRE
|%
+$  MOVE  [BONE CARD]
::
+$  CARD
  $%  [%POKE WIRE DOCK POKE]
      [%PEER WIRE DOCK PATH]
      [%PULL WIRE DOCK ~]
      [%DIFF DIFF]
      [%HISS WIRE [~ ~] %HTTR %HISS HISS]
  ==
::
+$  DIFF
  $%  [%HALL-RUMOR RUMOR:HALL]
      [%TIEBOUT-ACTION ACTION]
  ==
::
+$  POKE
  $%  [%TIEBOUT-ACTION ACTION]
  ==
::
+$  STATE
  $%  [%0 TIEBOUT-ZERO]
  ==
::
+$  TIEBOUT-ZERO
  $:
      ::  IOS DEVICE TOKEN
      ::
      TOKEN=@T
      ::  SHIP THAT ROUTES NOTIFICATIONS TO APPLE
      ::
      KING=@P
      ::  URL OF APPLE SERVER TO SEND NOTIFICATIONS TO
      ::
      BASEURL=@T
      ::  NAME AND LAST READ
      ::
      CIRCLES=(MAP NAME:HALL @)
  ==
::
--
::
::  STATE:
::
|_  [BOL=BOWL:GALL STA=STATE]
::
::  +THIS: APP CORE SUBJECT
::
++  THIS  .
::
::  +PREP: SET UP APP STATE, UPGRADE APP STATE
::
++  PREP
  |=  OLD=(UNIT STATE)
  ^-  (QUIP MOVE _THIS)
  ?~  OLD
    :-  ~
    %=  THIS
      KING.STA  ~DABBEN-LARBET
      BASEURL.STA  'HTTPS://API.PUSH.APPLE.COM/3/DEVICE/'
    ==
  ?-  -.U.OLD
    %0
      [~ THIS(STA U.OLD)]
  ==
::
::  +COUP: RECEIVE ACKNOWLEDGEMENT FOR POKE, PRINT ERROR IF IT FAILED
::
++  COUP
  |=  [WIR=WIRE ERR=(UNIT TANG)]
  ^-  (QUIP MOVE _THIS)
  ?~  ERR
    [~ THIS]
  (MEAN U.ERR)
::
::  +POKE-NOUN: RECEIVE DEBUGGING ACTIONS
::
++  POKE-NOUN
  |=  ACT=ACTION
  ^-  (QUIP MOVE _THIS)
  (POKE-TIEBOUT-ACTION ACT)
::
::  +POKE-TIEBOUT-ACTION: MAIN ACTION HANDLER
::
++  POKE-TIEBOUT-ACTION
  |=  ACT=ACTION
  ^-  (QUIP MOVE _THIS)
  ?-  -.ACT
    $KING        (SET-KING +.ACT)
    $TOKEN       (SET-TOKEN +.ACT)
    $BASEURL     (SET-BASEURL +.ACT)
    $ADD-CIRCLE  (ADD-CIRCLE +.ACT)
    $DEL-CIRCLE  (DEL-CIRCLE +.ACT)
    $NOTIFY      (SEND-NOTIFY +.ACT)
  ==
::
::  +ADD-CIRCLE: ADD CIRCLE AND SUBSCRIBE FOR UPDATES
::
++  ADD-CIRCLE
  |=  NOM=NAME:HALL
  ^-  (QUIP MOVE _THIS)
  :_  THIS(CIRCLES.STA (~(PUT BY CIRCLES.STA) NOM 0))
  [OST.BOL %PEER /OUR/[NOM] [OUR.BOL %HALL] /CIRCLE/[NOM]/CONFIG/GRAMS]~
::
::  +DEL-CIRCLE: DELETE CIRCLE AND UNSUBSCRIBE FROM UPDATES
::
++  DEL-CIRCLE
  |=  NOM=NAME:HALL
  ^-  (QUIP MOVE _THIS)
  :_  THIS(CIRCLES.STA (~(DEL BY CIRCLES.STA) NOM))
  [OST.BOL %PULL /OUR/[NOM] [OUR.BOL %HALL] ~]~
::
::  +SET-KING: SET KING @P
::
++  SET-KING
  |=  KNG=@P
  ^-  (QUIP MOVE _THIS)
  [~ THIS(KING.STA KNG)]
::
::  +SET-TOKEN: SET IOS DEVICE TOKEN @T
::
++  SET-TOKEN
  |=  TOK=@T
  ^-  (QUIP MOVE _THIS)
  [~ THIS(TOKEN.STA TOK)]
::
::  +SET-BASEURL: SET BASE URL @T
::
++  SET-BASEURL
  |=  BURL=@T
  ^-  (QUIP MOVE _THIS)
  [~ THIS(BASEURL.STA BURL)]
::
::  +SEND-NOTIFY: IF KING, SEND HISS. IF NOT, DO NOTHING.
::
++  SEND-NOTIFY
  |=  NOT=NOTIFICATION
  ^-  (QUIP MOVE _THIS)
  ?:  =(KING.STA OUR.BOL)
    :_  THIS
    [OST.BOL %HISS /REQUEST [~ ~] %HTTR %HISS (CREATE-APNS-REQUEST NOT)]~
  [~ THIS]
::
::  +DIFF-HALL-PRIZE: RECEIVE NEW CIRCLE DATA
::
++  DIFF-HALL-PRIZE
  |=  [WIR=WIRE PIZ=PRIZE:HALL]
  ^-  (QUIP MOVE _THIS)
  ?+  WIR
    (MEAN [LEAF+"INVALID WIRE FOR DIFF: {(SPUD WIR)}"]~)
  ::
  ::  %OUR: SET CONFIG OF CIRCLE AND ITERATE THROUGH MESSAGES, SENDING
  ::  NOTIFICATIONS FOR ALL MESSAGES WHERE NUMBER IS HIGHER THAN OUR LAST-READ
  ::
      {%OUR @ @}
    ?>  ?=(%CIRCLE -.PIZ)
    =/  NOM/NAME:HALL  I.T.WIR
    =/  RED/@UD  RED.LOC.COS.PIZ
    [~ THIS(CIRCLES.STA (~(PUT BY CIRCLES.STA) NOM RED))]
  ==
::
::  +REAP: RECIEVE ACKNOWLEDGEMENT FOR PEER
::
++  REAP
  |=  [WIR=WIRE ERR=(UNIT TANG)]
  ^-  (QUIP MOVE _THIS)
  ?~  ERR
    [~ THIS]
  ?+  WIR
    (MEAN [LEAF+"INVALID WIRE FOR DIFF: {(SPUD WIR)}"]~)
    ::
      {%OUR @ @}
    ?<  ?=(~ T.WIR)
    [~ THIS]
  ==
::
::  +QUIT: RECEIVE SUBSCRIPTION FAILED, RESUBSCRIBE
::
++  QUIT
  |=  WIR=WIRE
  ^-  (QUIP MOVE _THIS)
  ?+  WIR
    (MEAN [LEAF+"INVALID WIRE FOR DIFF: {(SPUD WIR)}"]~)
    ::
      {%OUR @ @}
    ?<  ?=(~ T.WIR)
    :_  THIS
    =/  DOC/DOCK  [OUR.BOL %HALL]
    [OST.BOL %PEER /OUR/[I.T.WIR] DOC /CIRCLE/[I.T.WIR]/CONFIG/GRAMS]~
  ==

::
::  +DIFF-HALL-RUMOR: RECEIVE MESSAGE OR A READ EVENT FROM A HALL CIRCLE
::
++  DIFF-HALL-RUMOR
  |=  [WIR=WIRE RUM=RUMOR:HALL]
  ^-  (QUIP MOVE _THIS)
  ?+  WIR
    (MEAN [LEAF+"INVALID WIRE FOR DIFF: {(SPUD WIR)}"]~)
  ::
  ::  %OUR
  ::
      {%OUR @ @}
    ?>  ?=(%CIRCLE -.RUM)
    =/  NOM/NAME:HALL  I.T.WIR
    ?+  -.RUM.RUM
      [~ THIS]
    ::
    ::  %GRAM: SEND NOTIFICATION IF ENVELOPE IS LOWER THAN READ NUMBER
    ::
      %GRAM
    =/  RED  (~(GET BY CIRCLES.STA) NOM)
    ?~  RED
      (MEAN [LEAF+"INVALID CIRCLE FOR DIFF: {(SPUD WIR)}"]~)
    ?:  (GTH NUM.NEV.RUM.RUM U.RED)
      :_  THIS(CIRCLES.STA (~(PUT BY CIRCLES.STA) NOM U.RED))
      (CONDITIONAL-MSG-TO-NOT U.RED NEV.RUM.RUM)
    :_  THIS
    (CONDITIONAL-MSG-TO-NOT U.RED NEV.RUM.RUM)
    ::
    ::   %CONFIG: SET OUR READ NUMBER
    ::
      %CONFIG
    ?+  -.DIF.RUM.RUM
      [~ THIS]
      ::
      %READ
    [~ THIS(CIRCLES.STA (~(PUT BY CIRCLES.STA) NOM RED.DIF.RUM.RUM))]
    ==
    ==
  ==
::
::  GENERATE NOTIFICATION MOVE FROM HALL MESSAGE IF CONDITIONS ARE MET
::
++  CONDITIONAL-MSG-TO-NOT
  |=  [RED=@UD ENV=ENVELOPE:HALL]
  ^-  (LIST MOVE)
  ?:  =(AUT.GAM.ENV OUR.BOL)
    ~
  =/  PAY  %-  MY  :~
    ALERT+S+'NEW MESSAGE FROM {(CITE:TITLE AUT.GAM.ENV)}'
  ==
  =/  NOT/NOTIFICATION  [TOKEN.STA 'COM.TLON.URBIT-CLIENT' PAY]
  ?:  (LTE NUM.ENV RED)
    ~
  =/  DOC/DOCK  [KING.STA DAP.BOL]
  [OST.BOL %POKE /ASK-KING DOC %TIEBOUT-ACTION [%NOTIFY NOT]]~

::
::  +CREATE-APNS-REQUEST: CREATE HISS WITH PAYLOAD FOR APNS
::
++  CREATE-APNS-REQUEST
  |=  NOT=NOTIFICATION
  ^-  HISS
  =/  FURL=@T  (CRIP (WELD (TRIP BASEURL.STA) (TRIP TOKEN.NOT)))
  =/  URL=PURL  (NEED (DE-PURL:HTML FURL))
  =/  JON=JSON  :-  %O
  %-  MY  :~
    APS+O+PAYLOAD.NOT
  ==
  :^  URL  %POST
  %-  MY  :~
    APNS-TOPIC+[TOPIC.NOT ~]  :: GENERATE MAP FROM RAW NOUN
  ==
  (SOME (AS-OCTT:MIMES:HTML (EN-JSON:HTML JON)))
--
